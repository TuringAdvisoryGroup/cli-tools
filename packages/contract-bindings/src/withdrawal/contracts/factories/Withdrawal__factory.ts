/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { Withdrawal, WithdrawalInterface } from "../Withdrawal";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "signer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "WithdrawalEvent",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "signer",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expiration",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "salt",
            type: "uint256",
          },
        ],
        internalType: "struct Withdrawal.Order",
        name: "order",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
        ],
        internalType: "struct Withdrawal.Sig",
        name: "sig",
        type: "tuple",
      },
    ],
    name: "withdrawal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610cb3806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063c398267314610030575b600080fd5b61004a6004803603810190610045919061069b565b61004c565b005b6100568282610298565b6100648260800135426103f8565b428260800135116100aa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100a1906109d8565b60405180910390fd5b60006100c5838036038101906100c091906106dc565b610494565b905060008082815260200190815260200160002060009054906101000a900460ff1615610127576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161011e906109f8565b60405180910390fd5b600160008083815260200190815260200160002060006101000a81548160ff0219169083151502179055508260400160208101906101659190610641565b73ffffffffffffffffffffffffffffffffffffffff166323b872dd8460000160208101906101939190610641565b8560200160208101906101a69190610641565b86606001356040518463ffffffff1660e01b81526004016101c99392919061095c565b602060405180830381600087803b1580156101e357600080fd5b505af11580156101f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061021b919061066e565b507fac1b5146d64cce65efba97457b49a2d72f9be2601587498d2be35fc679d229e18360000160208101906102509190610641565b8460200160208101906102639190610641565b8560400160208101906102769190610641565b866060013560405161028b94939291906108b6565b60405180910390a1505050565b60008260000160208101906102ad9190610641565b8360200160208101906102c09190610641565b8460400160208101906102d39190610641565b856060013586608001358760a001356040516020016102f7969594939291906108fb565b6040516020818303038152906040528051906020012090506000816040516020016103229190610890565b60405160208183030381529060405280519060200120905060006001828560000160208101906103529190610709565b86602001358760400135604051600081526020016040526040516103799493929190610993565b6020604051602081039080840390855afa15801561039b573d6000803e3d6000fd5b5050506020604051035190508073ffffffffffffffffffffffffffffffffffffffff168560000160208101906103d19190610641565b73ffffffffffffffffffffffffffffffffffffffff16146103f157600080fd5b5050505050565b610490828260405160240161040e929190610a18565b6040516020818303038152906040527f6c0f6980000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506104e6565b5050565b6000816000015182602001518360400151846060015185608001518660a001516040516020016104c996959493929190610820565b604051602081830303815290604052805190602001209050919050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b60008135905061051e81610c21565b92915050565b60008151905061053381610c38565b92915050565b600060c0828403121561054f5761054e610b79565b5b81905092915050565b600060c0828403121561056e5761056d610b7e565b5b61057860c0610a41565b905060006105888482850161050f565b600083015250602061059c8482850161050f565b60208301525060406105b08482850161050f565b60408301525060606105c484828501610617565b60608301525060806105d884828501610617565b60808301525060a06105ec84828501610617565b60a08301525092915050565b60006060828403121561060e5761060d610b79565b5b81905092915050565b60008135905061062681610c4f565b92915050565b60008135905061063b81610c66565b92915050565b60006020828403121561065757610656610b83565b5b60006106658482850161050f565b91505092915050565b60006020828403121561068457610683610b83565b5b600061069284828501610524565b91505092915050565b60008061012083850312156106b3576106b2610b83565b5b60006106c185828601610539565b92505060c06106d2858286016105f8565b9150509250929050565b600060c082840312156106f2576106f1610b83565b5b600061070084828501610558565b91505092915050565b60006020828403121561071f5761071e610b83565b5b600061072d8482850161062c565b91505092915050565b61073f81610a82565b82525050565b61075661075182610a82565b610b12565b82525050565b61076581610aa0565b82525050565b61077c61077782610aa0565b610b24565b82525050565b600061078f601c83610a77565b915061079a82610ba6565b601c82019050919050565b60006107b2600f83610a66565b91506107bd82610bcf565b602082019050919050565b60006107d5601183610a66565b91506107e082610bf8565b602082019050919050565b6107f481610aca565b82525050565b61080b61080682610aca565b610b40565b82525050565b61081a81610ad4565b82525050565b600061082c8289610745565b60148201915061083c8288610745565b60148201915061084c8287610745565b60148201915061085c82866107fa565b60208201915061086c82856107fa565b60208201915061087c82846107fa565b602082019150819050979650505050505050565b600061089b82610782565b91506108a7828461076b565b60208201915081905092915050565b60006080820190506108cb6000830187610736565b6108d86020830186610736565b6108e56040830185610736565b6108f260608301846107eb565b95945050505050565b600060c0820190506109106000830189610736565b61091d6020830188610736565b61092a6040830187610736565b61093760608301866107eb565b61094460808301856107eb565b61095160a08301846107eb565b979650505050505050565b60006060820190506109716000830186610736565b61097e6020830185610736565b61098b60408301846107eb565b949350505050565b60006080820190506109a8600083018761075c565b6109b56020830186610811565b6109c2604083018561075c565b6109cf606083018461075c565b95945050505050565b600060208201905081810360008301526109f1816107a5565b9050919050565b60006020820190508181036000830152610a11816107c8565b9050919050565b6000604082019050610a2d60008301856107eb565b610a3a60208301846107eb565b9392505050565b6000610a4b610a5c565b9050610a578282610ae1565b919050565b6000604051905090565b600082825260208201905092915050565b600081905092915050565b6000610a8d82610aaa565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b610aea82610b88565b810181811067ffffffffffffffff82111715610b0957610b08610b4a565b5b80604052505050565b6000610b1d82610b2e565b9050919050565b6000819050919050565b6000610b3982610b99565b9050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b60008160601b9050919050565b7f19457468657265756d205369676e6564204d6573736167653a0a333200000000600082015250565b7f414c524541445920455850495245440000000000000000000000000000000000600082015250565b7f414c52454144592050524f434553534544000000000000000000000000000000600082015250565b610c2a81610a82565b8114610c3557600080fd5b50565b610c4181610a94565b8114610c4c57600080fd5b50565b610c5881610aca565b8114610c6357600080fd5b50565b610c6f81610ad4565b8114610c7a57600080fd5b5056fea26469706673582212202f3b0c3976575466711aaa3483725a23a7c7fbe7b0406012995e45accea7d0c864736f6c63430008070033";

type WithdrawalConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WithdrawalConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Withdrawal__factory extends ContractFactory {
  constructor(...args: WithdrawalConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Withdrawal> {
    return super.deploy(overrides || {}) as Promise<Withdrawal>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Withdrawal {
    return super.attach(address) as Withdrawal;
  }
  override connect(signer: Signer): Withdrawal__factory {
    return super.connect(signer) as Withdrawal__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WithdrawalInterface {
    return new utils.Interface(_abi) as WithdrawalInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Withdrawal {
    return new Contract(address, _abi, signerOrProvider) as Withdrawal;
  }
}
