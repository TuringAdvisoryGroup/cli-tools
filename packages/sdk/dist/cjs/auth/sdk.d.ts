import { OauthConfig, Storage, RequestTokenResponseData } from './types';
export declare const TOKEN_STORAGE_KEY = "ROLL_AUTHSDK_TOKEN";
export declare const CODE_STORAGE_KEY = "ROLL_AUTHSDK_CODE";
export declare const CODE_VERIFIER_STORAGE_KEY = "ROLL_AUTHSDK_CODE_VERIFIER";
declare class SDK {
    private readonly config;
    private readonly storage;
    private token?;
    constructor(config: OauthConfig, storage: Storage);
    refreshTokens: (force?: boolean) => Promise<void>;
    requestAuthToken: (code: string, codeVerifier: string) => Promise<RequestTokenResponseData>;
    redirectUri: () => string;
    exchangeCodeForToken: (code: string) => Promise<void>;
    private saveTokenFromResponse;
    restoreTokenFromCache: () => Promise<void>;
    private getCache;
    clear: () => Promise<void>;
    isTokenExpired: () => boolean;
    getAccessToken: () => string | undefined;
    getIdToken: () => string | undefined;
    getRefreshToken: () => string | undefined;
    getExpiresIn: () => number | undefined;
    getError: () => string | undefined;
    getConfig: () => OauthConfig;
    getLogInUrl: () => Promise<[string, string]>;
    getLogOutUrl: () => Promise<string>;
    private setCode;
    private setCodeVerifier;
    private setToken;
}
export default SDK;
